{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv('../concrete.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "metadata": {},
   "outputs": [],
   "source": [
    "cement_group = [\n",
    "    (100, 200),\n",
    "    (200, 300),\n",
    "    (300, 400),\n",
    "    (400, 500),\n",
    "    (500, 999)\n",
    "]\n",
    "\n",
    "age_group = [\n",
    "    (0, 7),\n",
    "    (7, 30),\n",
    "    (30, 90),\n",
    "    (90, 999)\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "my_list = [[0]*4 for i in range(5)]\n",
    "for i, c in enumerate(cement_group):\n",
    "    for j, a in enumerate(age_group):\n",
    "        my_list[i][j] = len(df[(df['cement'] > c[0]) & (df['cement'] <= c[1]) & (df['age'] > a[0]) & (df['age'] <= a[1])])\n",
    "        \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[55, 169, 34, 25],\n",
       " [82, 157, 49, 46],\n",
       " [80, 115, 38, 44],\n",
       " [38, 31, 21, 16],\n",
       " [7, 15, 3, 5]]"
      ]
     },
     "execution_count": 101,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "my_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 102,
   "metadata": {},
   "outputs": [],
   "source": [
    "row_sum = [sum(i) for i in my_list]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 103,
   "metadata": {},
   "outputs": [],
   "source": [
    "col_sum = [sum(i[j] for i in my_list) for j in range(len(my_list[0]))]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 110,
   "metadata": {},
   "outputs": [],
   "source": [
    "expected = [[0]*4 for i in range(5)]\n",
    "total = sum(row_sum)\n",
    "\n",
    "for i in range(len(row_sum)):\n",
    "    for j in range(len(col_sum)):\n",
    "        expected[i][j] = row_sum[i]*col_sum[j]/total"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 114,
   "metadata": {},
   "outputs": [],
   "source": [
    "result = [[(my_list[i][j] - expected[i][j])**2/expected[i][j] for j in range(len(my_list[0]))] for i in range(len(my_list))]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [],
   "source": [
    "test_stat = sum([sum(i) for i in result])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "38.5578639619737"
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_stat"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
